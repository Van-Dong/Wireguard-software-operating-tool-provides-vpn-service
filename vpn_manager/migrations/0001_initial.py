# Generated by Django 4.2.13 on 2024-06-30 16:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GlobalSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint_address', models.CharField(max_length=15)),
                ('dns_servers', models.CharField(blank=True, max_length=255)),
                ('mtu', models.IntegerField(default=None, null=True, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(65535)])),
                ('persistent_keepalive', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(65535)])),
                ('table', models.CharField(blank=True, max_length=10)),
                ('firewall_mark', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('addresses', models.CharField(max_length=255)),
                ('listen_port', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1024), django.core.validators.MaxValueValidator(65535)])),
                ('enabled', models.BooleanField(default=False)),
                ('pre_up', models.CharField(blank=True, max_length=200)),
                ('post_up', models.CharField(blank=True, max_length=200)),
                ('pre_down', models.CharField(blank=True, max_length=200)),
                ('post_down', models.CharField(blank=True, max_length=200)),
                ('private_key', models.CharField(max_length=44, validators=[django.core.validators.MinLengthValidator(44)])),
                ('public_key', models.CharField(max_length=44, validators=[django.core.validators.MinLengthValidator(44)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VpnConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(blank=True, max_length=50)),
                ('allocated_ips', models.CharField(max_length=255, unique=True)),
                ('private_key', models.CharField(blank=True, max_length=44, validators=[django.core.validators.MinLengthValidator(44)])),
                ('public_key', models.CharField(blank=True, max_length=44, validators=[django.core.validators.MinLengthValidator(44)])),
                ('preshared_key', models.CharField(blank=True, max_length=44, validators=[django.core.validators.MinLengthValidator(44)])),
                ('allowed_ips', models.CharField(max_length=255)),
                ('endpoint', models.CharField(blank=True, max_length=22)),
                ('extra_allowed_ips', models.CharField(blank=True, max_length=255)),
                ('use_server_dns', models.BooleanField(default=False)),
                ('enabled', models.BooleanField(default=False)),
                ('additional_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vpn_manager.interface')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='VpnConnectionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curr_endpoint', models.CharField(max_length=40)),
                ('latest_handshake', models.BigIntegerField(default=0)),
                ('receive', models.BigIntegerField(default=0)),
                ('transmit', models.BigIntegerField(default=0)),
                ('type', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('peer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vpn_manager.vpnconnection')),
            ],
            options={
                'ordering': ['-created_at', 'id'],
            },
        ),
    ]
